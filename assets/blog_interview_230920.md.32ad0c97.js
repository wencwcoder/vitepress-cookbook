import{_ as e,c as a,o as t,V as o}from"./chunks/framework.35c8bad0.js";const p=JSON.parse('{"title":"面试题[Vue vs React]","description":"","frontmatter":{"title":"面试题[Vue vs React]","date":"2023-09-20T00:00:00.000Z"},"headers":[],"relativePath":"blog/interview/230920.md","lastUpdated":1733294158000}'),r={name:"blog/interview/230920.md"},c=o('<h1 id="面试题-vue-vs-react" tabindex="-1">面试题[Vue vs React] <a class="header-anchor" href="#面试题-vue-vs-react" aria-label="Permalink to &quot;面试题[Vue vs React]&quot;">​</a></h1><h2 id="_1-选择" tabindex="-1">1. 选择 <a class="header-anchor" href="#_1-选择" aria-label="Permalink to &quot;1. 选择&quot;">​</a></h2><p>项目中为什么要选择 Vue？</p><p>项目中为什么要选择 React？</p><h2 id="_2-虚拟-dom" tabindex="-1">2. 虚拟 DOM <a class="header-anchor" href="#_2-虚拟-dom" aria-label="Permalink to &quot;2. 虚拟 DOM&quot;">​</a></h2><h3 id="_2-1-react-的虚拟-dom-和-vue-的虚拟-dom-的区别" tabindex="-1">2.1 React 的虚拟 DOM 和 Vue 的虚拟 DOM 的区别 <a class="header-anchor" href="#_2-1-react-的虚拟-dom-和-vue-的虚拟-dom-的区别" aria-label="Permalink to &quot;2.1 React 的虚拟 DOM 和 Vue 的虚拟 DOM 的区别&quot;">​</a></h3><p>React 和 Vue 它们都引入了虚拟 DOM 的概念来提高性能，但它们在实现细节和使用上的方式有一些差异。</p><ul><li>1）<strong>实现方式</strong>：React 的虚拟 DOM 是内置的，它每次都会返回一个新的虚拟 DOM 树，并通过 diff 算法计算出最小的更新范围，而 Vue 的虚拟 DOM 是基于模板编译生成的。</li><li>2）<strong>更新策略</strong>：React 推崇单向数据流，每次状态变化需要重新渲染组件，而 Vue 则使用了双向数据绑定，数据的更新会自动反映到视图上。</li><li>3）<strong>调度机制</strong>：React 在处理虚拟 DOM 时使用了 Reconciliation 和 Fiber 架构，具有时间分片的特点，而 Vue 主要通过异步队列来批量更新，减少渲染次数。</li></ul>',8),i=[c];function s(n,l,d,_,u,h){return t(),a("div",null,i)}const V=e(r,[["render",s]]);export{p as __pageData,V as default};
