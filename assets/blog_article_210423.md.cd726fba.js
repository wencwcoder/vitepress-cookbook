import{_ as a,c as e,o as l,V as t}from"./chunks/framework.35c8bad0.js";const _=JSON.parse('{"title":"前端人该如何持续学习","description":"","frontmatter":{"title":"前端人该如何持续学习","date":"2021-04-23T00:00:00.000Z"},"headers":[],"relativePath":"blog/article/210423.md","lastUpdated":1713441767000}'),i={name:"blog/article/210423.md"},r=t('<h1 id="前端人该如何持续学习" tabindex="-1">前端人该如何持续学习 <a class="header-anchor" href="#前端人该如何持续学习" aria-label="Permalink to &quot;前端人该如何持续学习&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">源链接</p><p><a href="https://juejin.cn/post/6953083839673532453" target="_blank" rel="noreferrer">https://juejin.cn/post/6953083839673532453</a></p></div><h2 id="_1-被动学习和主动学习" tabindex="-1">1. 被动学习和主动学习 <a class="header-anchor" href="#_1-被动学习和主动学习" aria-label="Permalink to &quot;1. 被动学习和主动学习&quot;">​</a></h2><p>将学习分为被动学习和主动学习：</p><ul><li>被动学习：在工作中，因为客观需要而去学习（比如实现产品经理提出的需求、设计一个技术方案、跳槽面试等）。</li><li>主动学习：主观地去为了个人成长，主动自己去学习（比如看书、阅读公众号文章、看社区开源项目源码等）。</li></ul><p>从目的来区分主动学习和被动学习：</p><ul><li>被动学习：提高解决问题的能力，为了吃饭。</li><li>主动学习：提高核心竞争力，为了更好地吃饭。</li></ul><h2 id="_2-被动学习" tabindex="-1">2. 被动学习 <a class="header-anchor" href="#_2-被动学习" aria-label="Permalink to &quot;2. 被动学习&quot;">​</a></h2><h3 id="_2-1-工作" tabindex="-1">2.1 工作 <a class="header-anchor" href="#_2-1-工作" aria-label="Permalink to &quot;2.1 工作&quot;">​</a></h3><p>在工作中，需要学习的场景一般就两种：<strong>需求和产出</strong>。</p><ul><li>如何实现这个需求</li><li>如何更优雅地实现这个需求</li><li>如何设计一个技术方案</li><li>总结最佳实践</li><li>如何调试、看日志，如何定位问题</li></ul><p>总结来看就是一个如何在工作中解决问题。在此基础上，我们会想办法将它总结、输出。总结的过程一定是一个学习的过程。</p><h3 id="_2-2-面试" tabindex="-1">2.2 面试 <a class="header-anchor" href="#_2-2-面试" aria-label="Permalink to &quot;2.2 面试&quot;">​</a></h3><p>a、知识总结：每一次总结都是一次很好学习的机会。总结自己掌握的前端知识体系。总结知识体系的过程是一个查缺补漏的过程。遇到没掌握或者了解不深的知识点，务必去了解、搞清楚，否则就不算掌握。</p><p>总结自己做过的项目：</p><ul><li>难点、亮点</li><li>技术架构</li><li>最佳实践</li><li>涉及到的所有技术点都可以挖一下，看看有没有某个点是自己描述不清的</li></ul><p>b、刷题：刷 LeetCode：剑指 offer、大厂题库、归纳总结。</p><p>c、背题：很多前端理论、方法论的知识点还是需要强行记忆的，因为你平时根本不会去记忆特别完备的理论。</p><p>d、复盘：去面试一轮，复盘面试过程，查缺补漏。总结遇到的面试题，理清思路和参考答案即可。</p><h2 id="_3-主动学习" tabindex="-1">3. 主动学习 <a class="header-anchor" href="#_3-主动学习" aria-label="Permalink to &quot;3. 主动学习&quot;">​</a></h2><h3 id="_3-1-书" tabindex="-1">3.1 书 <a class="header-anchor" href="#_3-1-书" aria-label="Permalink to &quot;3.1 书&quot;">​</a></h3><blockquote><p>书中自有黄金屋，书中自有颜如玉</p></blockquote><p>作为前端开发者，工作之后可能确实很好机会接触书籍。但是，书籍可以提供完备的理论和方法论，通过书籍可以体系化地学习某一领域的知识，这对于个人的知识深度非常有帮助。</p><p>特别是一些计算机基础的知识点，非常适合通过读书来学习，比如数据结构、操作系统、算法、网络等。这些理论知识在非常长的一段时间都不会变，你可以放心地找一本非常著名、评价非常高的书来慢慢啃，而不用担心它的时效性，一定是受益整个职业生涯的。</p><p>看书的目的就一个：打破砂锅学到底，成为理论王者，指导实践。</p><p>推荐书籍：<a href="https://www.yuque.com/zaotalk/books" target="_blank" rel="noreferrer">来自前端早早聊的推荐</a></p><p>关键方法：选书、屯书、看书、总结。</p><h3 id="_3-2-社区" tabindex="-1">3.2 社区 <a class="header-anchor" href="#_3-2-社区" aria-label="Permalink to &quot;3.2 社区&quot;">​</a></h3><p>这里的社区指的是一些社交平台和技术社区，包括 GitHub、知乎、掘金、Twitter 等。</p><p>通过社区途径学习的关键词主要是两个：</p><ul><li>持续关注</li><li>取其精华</li></ul><p>关键方法：持续关注和积累，保持好奇心。</p><h4 id="github" tabindex="-1">GitHub <a class="header-anchor" href="#github" aria-label="Permalink to &quot;GitHub&quot;">​</a></h4><p>可以 follow 一些比较活跃的大 V，看他们的日常动态。</p><p>选择他的某些仓库，点进去看看 README，了解一下这个仓库干啥的，感兴趣可以写个 DEMO 玩玩。</p><p>准确地说，就是通过大 V 的眼睛去发现一些 GitHub 上的新东西，扩展视野。</p><h4 id="知乎" tabindex="-1">知乎 <a class="header-anchor" href="#知乎" aria-label="Permalink to &quot;知乎&quot;">​</a></h4><p>关注大 V 发表一些看法，通过他们能了解一些平时没关注的知识点。</p><p>高质量原创文章。</p><p>新轮子 or 新玩具。</p><h4 id="掘金" tabindex="-1">掘金 <a class="header-anchor" href="#掘金" aria-label="Permalink to &quot;掘金&quot;">​</a></h4><p>掘金是目前国内比较火的一个前端社区了，还是有非常多值得阅读的文章的。</p><p>可以每天刷刷首页的推荐流，取其精华，发现高质量原创文章。</p><h3 id="_3-3-公众号" tabindex="-1">3.3 公众号 <a class="header-anchor" href="#_3-3-公众号" aria-label="Permalink to &quot;3.3 公众号&quot;">​</a></h3><p>公众号的特性：</p><ul><li><p>碎片阅读。由于公众号的表现形式决定，它适合上下班，睡觉前，吃饭后等碎片时间阅读。</p></li><li><p>主动触达。公众号是通过 push 的形式推给用户的，也就是说，我只要关注了公众号，就会接收到文章推送，不用担心因为“懒”而不去学习。也就是所谓的“饭来张口”</p></li><li><p>非 “喂猪”。公众号和现在流行的短视频不同的是，它不是推荐算法，可以通过公众号看到各方面的文章，扩展视野</p></li></ul><p>关键方法：聚焦、持续。</p><h4 id="聚焦" tabindex="-1">聚焦 <a class="header-anchor" href="#聚焦" aria-label="Permalink to &quot;聚焦&quot;">​</a></h4><p>关注 1-3 个前端垂直领域公众号。</p><p>关注 1 个计算机领域公众号。</p><p>不要在花边新闻和标题党上浪费时间。</p><h4 id="持续" tabindex="-1">持续 <a class="header-anchor" href="#持续" aria-label="Permalink to &quot;持续&quot;">​</a></h4><p>通过标题判断是否值得阅读。</p><p>通过内容判断是否值得收藏。</p><p>Mobile 端碎片阅读。</p><p>PC 端深度阅读、分类收藏。</p><h3 id="_3-4-知识付费" tabindex="-1">3.4 知识付费 <a class="header-anchor" href="#_3-4-知识付费" aria-label="Permalink to &quot;3.4 知识付费&quot;">​</a></h3><p>首先，知识付费存在即合理。天下没有免费的午餐，想想，别人为啥平白无故教你，然后来卷他？所以，想要让别人教你一些东西，还是要等价交换的。当然，这个价不能太贵。</p><p>其次，我们需要取其精华去其糟粕。不是所有的付费知识都是值得的，有些很好，有些真的很辣鸡。</p><p>比如想学 webpack 的时候，繁杂的配置和流程，如果有人能体系地指导一下，就非常好；再比如浏览器原理，这东西就很抽象，没有实战经验，就需要有经验的前辈给你总结一下。</p><p>关键方法：定向搜索自己需要体系化的知识点。</p>',61),o=[r];function p(h,n,s,c,d,u){return l(),e("div",null,o)}const q=a(i,[["render",p]]);export{_ as __pageData,q as default};
