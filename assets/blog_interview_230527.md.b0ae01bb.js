import{_ as a,c as s,o as n,V as e}from"./chunks/framework.35c8bad0.js";const F=JSON.parse('{"title":"面试题[Vue]","description":"","frontmatter":{"title":"面试题[Vue]","date":"2023-05-27T00:00:00.000Z"},"headers":[],"relativePath":"blog/interview/230527.md","lastUpdated":1687445625000}'),l={name:"blog/interview/230527.md"},p=e(`<h1 id="面试题-vue" tabindex="-1">面试题[Vue] <a class="header-anchor" href="#面试题-vue" aria-label="Permalink to &quot;面试题[Vue]&quot;">​</a></h1><h2 id="_1-计算属性、方法" tabindex="-1">1. 计算属性、方法 <a class="header-anchor" href="#_1-计算属性、方法" aria-label="Permalink to &quot;1. 计算属性、方法&quot;">​</a></h2><h2 id="_2-侦听器" tabindex="-1">2. 侦听器 <a class="header-anchor" href="#_2-侦听器" aria-label="Permalink to &quot;2. 侦听器&quot;">​</a></h2><h2 id="_3-生命周期钩子" tabindex="-1">3. 生命周期钩子 <a class="header-anchor" href="#_3-生命周期钩子" aria-label="Permalink to &quot;3. 生命周期钩子&quot;">​</a></h2><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fcn.vuejs.org%2Fguide%2Fessentials%2Flifecycle.html" target="_blank" rel="noreferrer">Vue 的生命周期</a>可以分为8个阶段：创建阶段、挂载阶段、更新阶段和销毁阶段，每个阶段都有对应的钩子函数。具体如下：</p><h2 id="_4-组件之间的传值方式" tabindex="-1">4. 组件之间的传值方式 <a class="header-anchor" href="#_4-组件之间的传值方式" aria-label="Permalink to &quot;4. 组件之间的传值方式&quot;">​</a></h2><h2 id="_5-v-show-和-v-if-的区别" tabindex="-1">5. v-show 和 v-if 的区别 <a class="header-anchor" href="#_5-v-show-和-v-if-的区别" aria-label="Permalink to &quot;5. v-show 和 v-if 的区别&quot;">​</a></h2><h2 id="_6-复用已经封装好的组件时-在不修改原组件的前提下-如何扩展功能" tabindex="-1">6. 复用已经封装好的组件时，在不修改原组件的前提下，如何扩展功能 <a class="header-anchor" href="#_6-复用已经封装好的组件时-在不修改原组件的前提下-如何扩展功能" aria-label="Permalink to &quot;6. 复用已经封装好的组件时，在不修改原组件的前提下，如何扩展功能&quot;">​</a></h2><p>在Vue中，可以通过使用混入（Mixin）来扩展已封装好的组件的功能，而无需修改原组件的代码。混入是一种可重用的Vue组件选项对象，可以包含组件的各种选项，如数据、计算属性、方法等。</p><p>通过混入，你可以在不修改原组件的情况下，重复使用相同的功能扩展逻辑，并在不同的组件中进行组合和定制化。但要注意，混入可能会引起命名冲突或逻辑复杂性，因此请谨慎使用，并确保正确处理混入的数据和方法与原组件之间的交互关系。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. 创建一个混入对象，其中包含要扩展的功能：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mixin.js</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> myMixin </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      additionalData</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">This is additional data</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">additionalMethod</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">This is an additional method</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> myMixin</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 2. 在需要扩展功能的组件中导入并使用混入对象：</span></span>
<span class="line"><span style="color:#A6ACCD;">// MyComponent.vue</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- Original component template --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> myMixin </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./mixin.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mixins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [myMixin]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 原组件的选项继续定义...</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="虚拟-dom" tabindex="-1">虚拟 DOM <a class="header-anchor" href="#虚拟-dom" aria-label="Permalink to &quot;虚拟 DOM&quot;">​</a></h2><h2 id="diff-算法" tabindex="-1">Diff 算法 <a class="header-anchor" href="#diff-算法" aria-label="Permalink to &quot;Diff 算法&quot;">​</a></h2><h3 id="vue2" tabindex="-1">Vue2 <a class="header-anchor" href="#vue2" aria-label="Permalink to &quot;Vue2&quot;">​</a></h3><h3 id="vue3" tabindex="-1">Vue3 <a class="header-anchor" href="#vue3" aria-label="Permalink to &quot;Vue3&quot;">​</a></h3><h2 id="响应式原理" tabindex="-1">响应式原理 <a class="header-anchor" href="#响应式原理" aria-label="Permalink to &quot;响应式原理&quot;">​</a></h2><h3 id="vue2-1" tabindex="-1">Vue2 <a class="header-anchor" href="#vue2-1" aria-label="Permalink to &quot;Vue2&quot;">​</a></h3><h3 id="vue3-1" tabindex="-1">Vue3 <a class="header-anchor" href="#vue3-1" aria-label="Permalink to &quot;Vue3&quot;">​</a></h3><h2 id="编译原理" tabindex="-1">编译原理 <a class="header-anchor" href="#编译原理" aria-label="Permalink to &quot;编译原理&quot;">​</a></h2><h2 id="vue-中使用了哪几种设计模式" tabindex="-1">Vue 中使用了哪几种设计模式 <a class="header-anchor" href="#vue-中使用了哪几种设计模式" aria-label="Permalink to &quot;Vue 中使用了哪几种设计模式&quot;">​</a></h2><h2 id="vue3-和-vue2-的区别" tabindex="-1">Vue3 和 Vue2 的区别 <a class="header-anchor" href="#vue3-和-vue2-的区别" aria-label="Permalink to &quot;Vue3 和 Vue2 的区别&quot;">​</a></h2><h2 id="proxy-和-object-defineproperty-的区别" tabindex="-1">Proxy 和 Object.defineProperty 的区别 <a class="header-anchor" href="#proxy-和-object-defineproperty-的区别" aria-label="Permalink to &quot;Proxy 和 Object.defineProperty 的区别&quot;">​</a></h2><h2 id="composition-api-和-options-api-的区别" tabindex="-1">Composition API 和 Options API 的区别 <a class="header-anchor" href="#composition-api-和-options-api-的区别" aria-label="Permalink to &quot;Composition API 和 Options API 的区别&quot;">​</a></h2>`,24),o=[p];function t(r,i,c,u,y,D){return n(),s("div",null,o)}const d=a(l,[["render",t]]);export{F as __pageData,d as default};
