import{_ as a,c as e,o as t,V as o}from"./chunks/framework.35c8bad0.js";const u=JSON.parse('{"title":"引用数据类型之间的转换机制","description":"","frontmatter":{"title":"引用数据类型之间的转换机制","date":"2024-05-21T00:00:00.000Z"},"headers":[],"relativePath":"frontend/javascript/240521.md","lastUpdated":1716818127000}'),r={name:"frontend/javascript/240521.md"},n=o('<h1 id="引用数据类型之间的转换机制" tabindex="-1">引用数据类型之间的转换机制 <a class="header-anchor" href="#引用数据类型之间的转换机制" aria-label="Permalink to &quot;引用数据类型之间的转换机制&quot;">​</a></h1><h2 id="_1-序言" tabindex="-1">1. 序言 <a class="header-anchor" href="#_1-序言" aria-label="Permalink to &quot;1. 序言&quot;">​</a></h2><p>首先，在聊对象到原始值转换机制前我们需要搞明白两个类型转换方法：<code>valueOf()</code> 和 <code>toString()</code>。</p><h3 id="_1-1-valueof" tabindex="-1">1.1 valueOf() <a class="header-anchor" href="#_1-1-valueof" aria-label="Permalink to &quot;1.1 valueOf()&quot;">​</a></h3>',4),_=[n];function c(d,s,i,l,h,f){return t(),e("div",null,_)}const m=a(r,[["render",c]]);export{u as __pageData,m as default};
