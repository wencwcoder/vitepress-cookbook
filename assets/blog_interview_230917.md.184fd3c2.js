import{_ as a,c as e,o as t,V as i}from"./chunks/framework.35c8bad0.js";const m=JSON.parse('{"title":"面试题[Vue生态系统]","description":"","frontmatter":{"title":"面试题[Vue生态系统]","date":"2023-09-17T00:00:00.000Z"},"headers":[],"relativePath":"blog/interview/230917.md","lastUpdated":1730790862000}'),o={name:"blog/interview/230917.md"},r=i('<h1 id="面试题-vue生态系统" tabindex="-1">面试题[Vue生态系统] <a class="header-anchor" href="#面试题-vue生态系统" aria-label="Permalink to &quot;面试题[Vue生态系统]&quot;">​</a></h1><h2 id="_1-vuex" tabindex="-1">1. Vuex <a class="header-anchor" href="#_1-vuex" aria-label="Permalink to &quot;1. Vuex&quot;">​</a></h2><h3 id="_1-1-mapstate-引起的问题" tabindex="-1">1.1 mapstate 引起的问题 <a class="header-anchor" href="#_1-1-mapstate-引起的问题" aria-label="Permalink to &quot;1.1 mapstate 引起的问题&quot;">​</a></h3><ul><li>vuex 是单向数据流。</li><li>双向绑定的是 data 里面的属性，更改 state，不触发 data 属性的 set，也就不触发依赖更新；computed 里面每次更改值，会重新走一遍依赖收集更新机制，所以没问题。</li><li>computed 就是一个 lazy 的 watch。</li></ul><h2 id="_2-pinia" tabindex="-1">2. Pinia <a class="header-anchor" href="#_2-pinia" aria-label="Permalink to &quot;2. Pinia&quot;">​</a></h2><h3 id="_2-1-vuex-和-pinia-的区别" tabindex="-1">2.1 Vuex 和 Pinia 的区别 <a class="header-anchor" href="#_2-1-vuex-和-pinia-的区别" aria-label="Permalink to &quot;2.1 Vuex 和 Pinia 的区别&quot;">​</a></h3>',6),n=[r];function l(s,_,d,u,c,h){return t(),e("div",null,n)}const x=a(o,[["render",l]]);export{m as __pageData,x as default};
